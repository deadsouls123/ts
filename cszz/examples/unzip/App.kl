import \java\util\zip\ZipEntry;
import \java\util\zip\ZipFile;
import \java\io\File;
import \java\io\FileOutputStream;
import \java\util\zip\ZipException;
class {

    static void fail(String msg){
        System.out.println(msg);
    }

    static void print(String msg){
        System.out.print(msg);
    }
    
    static void println(String msg){
        System.out.println(msg);
    }
	
    private static void printUsage(){
        System.out.println("unzip ZIP_FILE OUTPUT_DIR");
    }
	
    static void main(String[] args) throws Exception{
        if(args.length<2){
            printUsage();
            return;
        }
        var zipPath = args[0];
        var outputDir = args[1];
        var zipFile = new File(zipPath);
        if(!zipFile.exists()){
            fail("template file does not exists!");
            return;
            //throw new Exception("Repository not exist!");
        }
        unzipFile(zipFile,outputDir);
    }
	
    static void fileCreated(File f){
        print(f.isDirectory() ? "Directory" : "File");
        print (" created:");
        print (f.getAbsolutePath());
        println ("");
    }
	
    static void unzipFile(File file,String destPath) throws Exception{
        var zf = new ZipFile(file);
        var ens = zf.entries();
        byte[] data = new byte[4096];
        var destDir = new File(destPath);
        if(!destDir.exists() && !destDir.mkdirs()){
            fail("unable to create directory:"+destDir);
            return;
        }
        while(ens.hasMoreElements()){
            ZipEntry en =(ZipEntry) ens.nextElement();
            var dstFile = new File(destDir,en.getName());
            if(en.isDirectory()){
                if(!dstFile.mkdirs()){
                    fail("创建文件夹失败！");
                    return;
                }
            }else{
                var outDir = dstFile.getParentFile();
                if( !outDir.exists() && !outDir.mkdirs() ){
                     fail("unable to create directory:"+outDir.getAbsolutePath());
                     return;
                }
                var is = zf.getInputStream(en);
                var os = new FileOutputStream(dstFile);
                var len = 1;
                while((len = is.read(data))>0){
                    os.write(data,0,len);
                }
                is.close();
                os.close();
            }
            fileCreated(dstFile);
        }
        zf.close();
    }
    
}
